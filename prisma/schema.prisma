// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  npm        String     @unique
  password   String
  role       String
  createdAt  DateTime   @map("created_at")
  dataSiswa  DataSiswa?
  dataDosen  DataDosen?
}

model DataSiswa {
  id       Int       @id @default(autoincrement())
  nama     String
  npm      String    @unique
  kelas    String
  nomorHp  String    @map("nomor_hp")
  alamat   String
  presensi Presensi?
  user     User      @relation(fields: [npm], references: [npm])
}

model DataDosen {
  id      Int          @id @default(autoincrement())
  nama    String  
  nidn    String       @unique
  kelas   String
  nomorHp String       @map("nomor_hp")
  alamat  String
  matkul  MataKuliah[]
  user    User         @relation(fields: [nidn], references: [npm])
}

model MataKuliah {
  id             Int        @id @default(autoincrement())
  dosen          String     @unique
  kodeMataKuliah String     @unique @map("kode_mata_kuliah")
  namaMataKuliah String     @map("nama_mata_kuliah")
  dosenNama      DataDosen  @relation(fields: [dosen], references: [nidn])
}

model Presensi {
  id         Int       @id @default(autoincrement())
  tanggal    DateTime  @default(now()) @db.Timestamptz(6)
  nama       String
  npm        String    @unique
  sudahAbsen Boolean   @map("sudah_absen")
  waktuAbsen DateTime  @map("waktu_absen")
  siswa      DataSiswa @relation(fields: [npm], references: [npm])
}